import 'package:cashier_system/core/localization/text_routes.dart';

Map<String, String> enTranslation = {
  //! Auth:
  TextRoutes.iQD: "IQD",
  TextRoutes.username: "User name",
  TextRoutes.password: "Password",
  TextRoutes.forgetPassword: "Forget password",
  TextRoutes.contactUs: "Contact us",
  TextRoutes.systemRegistration: "System registration",
  TextRoutes.alreadyRegisteredFromThisAccount:
      "Already registered from this account",
  TextRoutes.theOtpCodeIsNotRecognizedPleaseCheckAndEnterItAgain:
      "The OTP code is not recognized, please check and enter it again",
  TextRoutes.verifyCode: "Verify code",
  TextRoutes.cashier: "Cashier",
  TextRoutes.impExp: "Import / Export",
  TextRoutes.inventory: "Inventory",
  TextRoutes.buying: "Buying",
  TextRoutes.catagories: "Categories",
  TextRoutes.items: "Items",
  TextRoutes.settings: "Settings",
  TextRoutes.addAdmin: "Add admin",
  TextRoutes.aboutUs: "About us",
  TextRoutes.logout: "Logout",
  TextRoutes.youDoNotHaveAccessToThisFields:
      "You do not have access to these fields",
  //! Cashier Translate:
  TextRoutes.totalPrice: "Total price",
  TextRoutes.pay: "Pay",
  TextRoutes.newBill: "New bill",
  TextRoutes.delay: "Delay",
  TextRoutes.print: "Print",
  TextRoutes.orderDiscount: "Order discount",
  TextRoutes.itemDiscount: "Item discount",
  TextRoutes.gift: "Gift",
  TextRoutes.qty: "Quantity",
  TextRoutes.deleteCart: "Delete cart",
  TextRoutes.deleteItem: "Delete item",
  TextRoutes.tax: "Tax",
  TextRoutes.customerName: "Customer name",
  TextRoutes.cashbackCash: "Cashback cash",
  TextRoutes.deptCash: "Dept cash",
  TextRoutes.cashPayment: "Cash payment",
  TextRoutes.deptPayment: "Dept payment",
  TextRoutes.editPrevious: "Edit previous",
  TextRoutes.exportPDF: "Export PDF",
  TextRoutes.quantity: "Quantity",
  TextRoutes.layout: "Layout",
  TextRoutes.stack: "Stack",
  TextRoutes.percentDiscount: "Percent discount",
  TextRoutes.editPrice: "Edit price",
  TextRoutes.selectPath: "Select path",
  TextRoutes.openFile: "Open file",
  TextRoutes.saveFile: "Save file",
  TextRoutes.discountPrice: "Discount price",
  TextRoutes.price: "Price",
  TextRoutes.expand: "Expand",
  TextRoutes.minimize: "Minimize",
  TextRoutes.type: "Type",
  TextRoutes.itemsName: "Items name",
  TextRoutes.code: "Code",
  TextRoutes.invoiceOrganizer: "Invoice organizer",
  TextRoutes.itemNumbers: "Item numbers",
  TextRoutes.discount: "Discount",
  TextRoutes.fees: "Fees",
  TextRoutes.addNewCustomer: "Add new customer",
  TextRoutes.addNewSupplier: "Add new supplier",
  TextRoutes.addNewAccount: "Add new account",
  TextRoutes.searchForCustomerName: "Search for customer name",
  TextRoutes.fullName: "Full name",
  TextRoutes.phoneNumber: "Phone number",
  TextRoutes.address: "Address",
  TextRoutes.note: "Note",
  TextRoutes.orderPayment: "Order payment",
  TextRoutes.paidAmount: "Paid amount",
  TextRoutes.loss: "Loss",
  TextRoutes.lastInvoices: "Last invoices",
  TextRoutes.pleaseChooseItemsOrScanningABarcode:
      "Please choose items or scanning a barcode",
  TextRoutes.pcs: "Pcs",
  TextRoutes.reminder: "Reminder",
  TextRoutes.enterPaidAmount: "Enter paid amount",
  TextRoutes.carton: "Carton",
  TextRoutes.organizer: "Organizer",
  TextRoutes.searchItems: "Search items",
  TextRoutes.autoSave: "Auto save",
  TextRoutes.drawerLock: "Drawer lock",
  TextRoutes.openDrawerLock: "Open drawer lock",
  TextRoutes.longPressToUpdateSettings: "Long press to update settings",
  TextRoutes.paymentIsDeptPleaseAddCustomerDetailsFirst:
      "Payment is dept, please add customer details first",
  TextRoutes.addToCart: "Add to cart",
  TextRoutes.areYouSureToCashbackSelectedItems:
      "Are you sure to cashback selected items",
  //! Reports:
  TextRoutes.reports: "Reports",
  TextRoutes.generalLedger: "General ledger",
  TextRoutes.trialBalance: "Trial balance",
  TextRoutes.boxReport: "Box report",
  TextRoutes.bankReport: "Bank report",
  TextRoutes.customerReport: "Customer report",
  TextRoutes.supplierReport: "Supplier report",
  TextRoutes.withdrawalReport: "Withdrawal report",
  TextRoutes.retainedEarningsReport: "Retained earnings report",
  TextRoutes.accountStatement: "Account statement",
  TextRoutes.transactionType: "Transaction type",
  TextRoutes.transactionNumber: "Transaction number",
  TextRoutes.allTransactions: "All transactions",
  TextRoutes.credit: "Credit",
  TextRoutes.debit: "Debit",
  TextRoutes.dailyReports: "Daily reports",
  TextRoutes.inventorReports: "Inventory reports",
  TextRoutes.billingProfits: "Billing profits",
  TextRoutes.financialReports: "Financial reports",
  TextRoutes.voucherNo: "Voucher no",
  TextRoutes.sale: "Sale",
  TextRoutes.inventorySummary: "Inventory summary",
  TextRoutes.inventoryMovement: "Inventory movement",
  TextRoutes.inventoryValuation: "Inventory valuation",
  TextRoutes.sales: "Sales",
  TextRoutes.purchaes: "Purchases",
  TextRoutes.returnsSale: "Returns sale",
  TextRoutes.returnsPurchaes: "Returns purchases",
  TextRoutes.adjustment: "Adjustment",
  TextRoutes.unit: "Unit",
  TextRoutes.soldQTY: "Sold quantity",
  TextRoutes.returnPurchaseQTY: "Return purchase quantity",
  TextRoutes.returnSaleQTY: "Return sale quantity",
  TextRoutes.purchasedQTY: "Purchased quantity",
  TextRoutes.availableQTY: "Available quantity",
  TextRoutes.incomeStatement: "Income statement",
  TextRoutes.ballanceSheet: "Balance sheet",
  TextRoutes.dept: "دين",
  TextRoutes.cash: "نقدي",
  TextRoutes.debtors: "المدينون",
  TextRoutes.creditors: "الدائنون",
  TextRoutes.all: "الكل",
  TextRoutes.unknown: "غير معروف",
  TextRoutes.cashAgent: "وكيل النقدية",
  TextRoutes.no: "لا",
  TextRoutes.invoiceDate: "تاريخ الفاتورة",
  TextRoutes.invoiceAmount: "مبلغ الفاتورة",
  TextRoutes.invoiceType: "نوع الفاتورة",
  TextRoutes.totalBallance: "الرصيد الكلي",
  TextRoutes.totalBillsBallance: "رصيد الفواتير الكلي",
  TextRoutes.totalImportsBallance: "رصيد الواردات الكلي",
  TextRoutes.totalExportsBallance: "رصيد الصادرات الكلي",
  TextRoutes.invoicePayment: "دفع الفاتورة",
  TextRoutes.totalInvoicePrice: "إجمالي سعر الفاتورة",
  TextRoutes.invoiceCost: "تكلفة الفاتورة",
  TextRoutes.invoiceProfit: "ربح الفاتورة",
  TextRoutes.profits: "الأرباح",
  TextRoutes.cost: "التكلفة",
  //! Purchaes:
  TextRoutes.purchaesItems: "Purchase items",
  TextRoutes.viewPurchaes: "View purchases",
  TextRoutes.purchaesPrice: "Purchase price",
  TextRoutes.totalPriceDiscount: "Total price discount",
  TextRoutes.totalPurchaesPrice: "Total purchase price",
  //! Transactions
  TextRoutes.receiptAndPayments: "Receipt and payments",
  TextRoutes.addPayments: "Add payments",
  TextRoutes.addReceipt: "Add receipt",
  TextRoutes.addJournalVoucher: "Add journal voucher",
  TextRoutes.addOpeningEntry: "Add opening entry",
  TextRoutes.receiptVoucher: "Receipt voucher",
  TextRoutes.sourceAccount: "Source account",
  TextRoutes.sourceAccountType: "Source account type",
  TextRoutes.targetAccountType: "Target account type",
  TextRoutes.invoiceNumber: "Invoice number",
  TextRoutes.fromInvoiceNumber: "From invoice number",
  TextRoutes.toInvoiceNumber: "To invoice number",
  TextRoutes.fromDate: "From date",
  TextRoutes.toDate: "To date",
  TextRoutes.receipts: "Receipts",
  TextRoutes.receiptString: "Receipt",
  TextRoutes.paymentString: "Payment",
  TextRoutes.payments: "Payments",
  TextRoutes.journalVoucher: "Journal voucher",
  TextRoutes.openingEntry: "Opening entry",
  TextRoutes.voucherDetails: "Voucher details",
  TextRoutes.voucherNumber: "Voucher number",
  TextRoutes.addTransaction: "Add transaction",
  TextRoutes.editTransaction: "Edit transaction",
  TextRoutes.search: "Search",
  TextRoutes.add: "Add",
  TextRoutes.supplierName: "Supplier name",
  TextRoutes.date: "Date",
  TextRoutes.ballance: "Balance",
  TextRoutes.amount: "Amount",
  TextRoutes.box: "Box",
  TextRoutes.cashExpenses: "Cash expenses",
  //! Items:
  TextRoutes.autoFill: "Auto fill",
  TextRoutes.sortAsc: "Sort ascending",
  TextRoutes.sortDesc: "Sort descending",
  TextRoutes.viewItems: "View items",
  TextRoutes.addItems: "Add items",
  TextRoutes.searchBy: "Search by",
  TextRoutes.sortBy: "Sort by",
  TextRoutes.itemsNo: "Items number",
  TextRoutes.itemsQty: "Items quantity",
  TextRoutes.itemsCount: "Items count",
  TextRoutes.itemsType: "Items type",
  TextRoutes.createDate: "Create date",
  TextRoutes.expireDate: "Expire date",
  TextRoutes.creationDateFrom: "Creation date from",
  TextRoutes.creationDateTo: "Creation date to",
  TextRoutes.itemsCategories: "Items categories",
  TextRoutes.explain: "Explain",
  TextRoutes.categories: "Categories",
  TextRoutes.costPrice: "Cost price",
  TextRoutes.totalCostPrice: "Total cost price",
  TextRoutes.buyingPrice: "Buying price",
  TextRoutes.sellingPrice: "Selling price",
  TextRoutes.wholesalePrice: "Wholesale price",
  TextRoutes.chooseCategories: "Choose categories",
  TextRoutes.chooseType: "Choose type",
  TextRoutes.editItem: "Edit item",
  TextRoutes.barcode: "Barcode",
  TextRoutes.baseUnit: "Base unit",
  TextRoutes.baseUnitQuantity: "Base unit quantity",
  TextRoutes.totalQuantity: "Total quantity",
  TextRoutes.alternativeUnit: "Alternative unit",
  TextRoutes.alternativeUnitQuantity: "Alternative unit quantity",
  TextRoutes.fromSmallToBig: "From small to big",
  TextRoutes.fromBigToSmall: "From big to small",
  TextRoutes.unitsConvert: "Units convert",
  TextRoutes.productionDate: "Production date",
  TextRoutes.expiryDate: "Expiry date",
  TextRoutes.itemsTypes: "Items types",
  TextRoutes.totalItemsNumber: "Total items number",
  TextRoutes.totalItemsPrice: "Total items price",
  TextRoutes.clearFileds: "Clear fields",
  TextRoutes.itemTypeFrom: "Item type from",
  TextRoutes.itemTypeTo: "Item type to",
  TextRoutes.soldQuantity: "Sold quantity",
  TextRoutes.lastPurchasePrice: "Last purchase price",
  TextRoutes.currentStock: "Current stock",
  TextRoutes.lastSupplier: "Last supplier",
  TextRoutes.itemsDesc: "Items description",
  TextRoutes.numberOfPcsInEachCarton: "Number of pcs in each carton",
  TextRoutes.prices: "Prices",
  TextRoutes.piece: "Piece",
  TextRoutes.kilograms: "Kilograms",
  TextRoutes.kg: "Kg",
  TextRoutes.g: "G",
  TextRoutes.grams: "Grams",
  TextRoutes.l: "L",
  TextRoutes.liters: "Liters",
  TextRoutes.ml: "Ml",
  TextRoutes.milliliters: "Milliliters",
  TextRoutes.itemDetails: "Item details",
  TextRoutes.close: "Close",
  TextRoutes.details: "Details",
  TextRoutes.uploadImage: "Upload image",
  TextRoutes.pickPrinter: "Pick printer",
  //! Categories:
  TextRoutes.viewCategories: "View categories",
  TextRoutes.addCategories: "Add categories",
  TextRoutes.categoriesName: "Categories name",
  TextRoutes.categoriesImage: "Categories image",
  TextRoutes.editCategories: "Edit categories",
  TextRoutes.pressToEditDoubleClickToRemove: "Press to edit, double click to remove",
  TextRoutes.searchInCatagoriesDots: "Search in categories...",
  TextRoutes.searchInCatagories: "Search in categories",
  //! Accounts:
   TextRoutes.addAccount: "Add account",
  TextRoutes.accountingAccounts: "Accounting accounts",
  TextRoutes.clientsAccounts: "Clients accounts",
  TextRoutes.userId: "User ID",
  TextRoutes.fromUserId: "From user ID",
  TextRoutes.toUserId: "To user ID",
  TextRoutes.assets: "Assets",
  TextRoutes.revenues: "Revenues",
  TextRoutes.liabilities: "Liabilities",
  TextRoutes.equity: "Equity",
  TextRoutes.bank: "Bank",
  TextRoutes.customers: "Customers",
  TextRoutes.equipment: "Equipment",
  TextRoutes.suppliers: "Suppliers",
  TextRoutes.loans: "Loans",
  TextRoutes.salariesPayable: "Salaries payable",
  TextRoutes.taxesPayable: "Taxes payable",
  TextRoutes.ownerCapital: "Owner capital",
  TextRoutes.retainedEarnings: "Retained earnings",
  TextRoutes.rentExpense: "Rent expense",
  TextRoutes.utilitiesExpense: "Utilities expense",
  TextRoutes.salariesExpense: "Salaries expense",
  TextRoutes.suppliesExpense: "Supplies expense",
  TextRoutes.productSales: "Product sales",
  TextRoutes.serviceIncome: "Service income",
  TextRoutes.interestIncome: "Interest income",
  TextRoutes.accountList: "Account list",
  TextRoutes.editAccount: "Edit account",
  TextRoutes.accountType: "Account type",
  TextRoutes.accountName: "Account name",
  TextRoutes.accountCode: "Account code",
  TextRoutes.cannotDeleteThisAccountBecauseItHasSubAccounts: "Cannot delete this account because it has sub-accounts",
  TextRoutes.cannotDeleteThisAccountBecauseItHasTransactions: "Cannot delete this account because it has transactions",
  TextRoutes.accountDeletedSuccessfully: "Account deleted successfully",
  TextRoutes.failedToDeleteAccount: "Failed to delete account",
  TextRoutes.errorWhileDeletingAccount: "Error while deleting account",
  TextRoutes.customer: "Customer",
  TextRoutes.supplier: "Supplier",
  TextRoutes.expenses: "Expenses",
  TextRoutes.expensesType: "Expenses type",
  TextRoutes.costOfGoodsSold: "Cost of goods sold",
  TextRoutes.employeeSalaries: "Employee salaries",
  TextRoutes.rent: "Rent",
  TextRoutes.electricity: "Electricity",
  TextRoutes.water: "Water",
  TextRoutes.internet: "Internet",
  TextRoutes.advertising: "Advertising",
  TextRoutes.maintenance: "Maintenance",
  TextRoutes.transportation: "Transportation",
  TextRoutes.officeSupplies: "Office supplies",
  TextRoutes.miscellaneousExpenses: "Miscellaneous expenses",
  TextRoutes.insurance: "Insurance",
  TextRoutes.taxes: "Taxes",
  TextRoutes.training: "Training",
  TextRoutes.bankInterest: "Bank interest",
  
  //! ToolTip
  TextRoutes.printReceipt: "Print receipt",
  TextRoutes.pauseInvoiceForWhile: "Pause invoice for while",
  TextRoutes.discountSpecifiedAmountFromInvoice: "Discount specified amount from invoice",
  TextRoutes.percentageDiscountFromInvoice: "Percentage discount from invoice",
  TextRoutes.changeQuantityOfSelectedItem: "Change quantity of selected item",
  TextRoutes.changePriceOfSelectedItem: "Change price of selected item",
  TextRoutes.addSelectedItemAsGiftToInvoice: "Add selected item as gift to invoice",
  TextRoutes.deleteSelectedItems: "Delete selected items",
  TextRoutes.deleteCurrentCart: "Delete current cart",
  TextRoutes.addCustomerNameToInvoice: "Add customer name to invoice",
  TextRoutes.addExtraTaxToInvoice: "Add extra tax to invoice",
  TextRoutes.toggleBetweenCashAndCreditInvoice: "Toggle between cash and credit invoice",
  TextRoutes.toggleBetweenCashbackAndNormalCash: "Toggle between cashback and normal cash",
  TextRoutes.exportPdfFileForCurrentInvoice: "Export PDF file for current invoice",
  TextRoutes.editSelectedInvoice: "Edit selected invoice",
  TextRoutes.changeLayoutOfScreen: "Change layout of screen",

  //! Error:
  //?Titles:
    TextRoutes.success: "Success",
  TextRoutes.error: "Error",
  TextRoutes.fail: "Fail",
  TextRoutes.hint: "Hint",
  TextRoutes.warning: "Warning",
  TextRoutes.submit: "Submit",
  TextRoutes.cancel: "Cancel",
  TextRoutes.confirm: "Confirm",
  TextRoutes.edit: "Edit",
  TextRoutes.remove: "Remove",
  TextRoutes.view: "View",
  TextRoutes.loading: "Loading",
  TextRoutes.noInternet: "No internet",
  TextRoutes.serverFail: "Server failure",
  //! Messages
    TextRoutes.noData: "No data",
  TextRoutes.anErrorOccurred: "An error occurred",
  TextRoutes.dataAddedSuccess: "Data added successfully",
  TextRoutes.dataDeletedSuccess: "Data deleted successfully",
  TextRoutes.dataUpdatedSuccess: "Data updated successfully",
  TextRoutes.failAddData: "Failed to add data",
  TextRoutes.failDeleteData: "Failed to delete data",
  TextRoutes.failUpdateData: "Failed to update data",
  TextRoutes.failDuringFetchData: "Failed during fetching data",
  TextRoutes.somethingWentWrong: "Something went wrong",
  TextRoutes.confirmDelete: "Are you sure to remove data?",
  TextRoutes.emptyCart: "Empty cart",
  TextRoutes.emptyStock: "Empty stock",
  TextRoutes.deptPaymentSelectCustomer: "Please select customer for debt payment",
  TextRoutes.formValidationFailed: "Form validation failed",
  TextRoutes.selectOneRowAtLeast: "Select at least one row",
  TextRoutes.sureRemoveData: "Are you sure to remove data",
  //? Cashier Errors:
    TextRoutes.cartNumberNotSet: "Cart number not set",
  TextRoutes.allCartFull: "All carts full",
  TextRoutes.failedUpdateItemCount: "Failed to update item count",
  TextRoutes.failedToLoadCartData: "Failed to load cart data",
  TextRoutes.pdfExportedSuccessfully: "PDF exported successfully",
  TextRoutes.otpCodeAlreadyUsedContactSeller: "OTP code already used, contact seller",
  TextRoutes.errorFetchingUnitData: "Error fetching unit data",
  TextRoutes.noUnitsFoundForItem: "No units found for item",
  TextRoutes.failedToRetrieveUnitCartonPcs: "Failed to retrieve unit carton pcs",
  TextRoutes.errorFetchingPurchaseDetails: "Error fetching purchase details",
  TextRoutes.errorFetchingItemsData: "Error fetching items data",
  TextRoutes.errorFetchingUsers: "Error fetching users",
  TextRoutes.errorFetchingItems: "Error fetching items",
  TextRoutes.errorGeneratingUniquePurchaseNumber: "Error generating unique purchase number",
  TextRoutes.failedToUpdateInvoice: "Failed to update invoice",
  TextRoutes.exceptionGettingItems: "Exception getting items",
  TextRoutes.exceptionGettingUsers: "Exception getting users",
  TextRoutes.exceptionAddingItemToCart: "Exception adding item to cart",
  TextRoutes.exceptionGettingCartData: "Exception getting cart data",
  TextRoutes.exceptionIncreasingItemCount: "Exception increasing item count",
  TextRoutes.exceptionUpdatingItem: "Exception updating item",
  TextRoutes.exceptionDelayingCart: "Exception delaying cart",
  TextRoutes.exceptionApplyingPercentageDiscount: "Exception applying percentage discount",
  TextRoutes.exceptionUpdatingItemQuantity: "Exception updating item quantity",
  TextRoutes.exceptionUpdatingItemNumber: "Exception updating item number",
  TextRoutes.exceptionApplyingItemsGift: "Exception applying items gift",
  TextRoutes.exceptionDeletingItems: "Exception deleting items",
  TextRoutes.exceptionDeletingCart: "Exception deleting cart",
  TextRoutes.exceptionAddingCartOwner: "Exception adding cart owner",
  TextRoutes.exceptionUpdatingCartOwnerName: "Exception updating cart owner name",
  TextRoutes.exceptionUpdatingCartTax: "Exception updating cart tax",
  TextRoutes.exceptionCreatingNewBill: "Exception creating new bill",
  TextRoutes.exceptionProcessingPayment: "Exception processing payment",
  TextRoutes.exceptionFetchingMaxInvoiceNumber: "Exception fetching max invoice number",
  TextRoutes.exceptionFetchingLastInvoices: "Exception fetching last invoices",
  TextRoutes.exceptionUpdatingInvoice: "Exception updating invoice",
  TextRoutes.exceptionPayingInvoice: "Exception paying invoice",
  TextRoutes.errorDuringUpdateData: "Error during update data",
  TextRoutes.errorDuringFetchingData: "Error during fetching data",
  TextRoutes.errorDuringDeletingData: "Error during deleting data",
  TextRoutes.errorDuringInsertingData: "Error during inserting data",
  TextRoutes.errorDuringFetchBoxData: "Error during fetch box data",
  TextRoutes.errorDuringFetchingProfitData: "Error during fetching profit data",
  TextRoutes.errorDuringFetchExpenseData: "Error during fetch expense data",
  TextRoutes.errorDuringFetchImportData: "Error during fetch import data",
  TextRoutes.errorDuringFetchExportData: "Error during fetch export data",
  TextRoutes.errorDuringFetchTotalProfitInventoryData: "Error during fetch total profit inventory data",
  TextRoutes.errorFetchingDebtorDetails: "Error fetching debtor details",
  TextRoutes.errorDuringFetchDebtorData: "Error during fetch debtor data",
  TextRoutes.errorFetchingCreditorData: "Error fetching creditor data",
  TextRoutes.failedToConvertSellingPrice: "Failed to convert selling price",
  TextRoutes.failedToAddDynamicFields: "Failed to add dynamic fields",
  TextRoutes.failedToRemoveDynamicField: "Failed to remove dynamic field",
  TextRoutes.failedToAddItems: "Failed to add items",
  TextRoutes.errorFetchingCategories: "Error fetching categories",
  TextRoutes.errorFetchingTypes: "Error fetching types",
  TextRoutes.failedToUpdateItem: "Failed to update item",
  TextRoutes.failedToInitializeController: "Failed to initialize controller",
  TextRoutes.noDataFound: "No data found",
  TextRoutes.allDataLoaded: "All data loaded",
  TextRoutes.errorDeletingItems: "Error deleting items",
  TextRoutes.errorNavigatingToUpdateItems: "Error navigating to update items",
  TextRoutes.errorFetchingItemTransactions: "Error fetching item transactions",
  TextRoutes.errorUpdatingItemPrice: "Error updating item price",
  TextRoutes.errorUpdatingItemDetails: "Error updating item details",
  TextRoutes.errorDuringDatabaseRestore: "Error during database restore",
  TextRoutes.errorSavingDatabaseCopy: "Error saving database copy",
  TextRoutes.errorProcessingCartData: "Error processing cart data",
  TextRoutes.errorUpdatingCartStatus: "Error updating cart status",
  TextRoutes.errorFetchingTotalCartPrice: "Error fetching total cart price",
  TextRoutes.errorFetchingTotalCartCost: "Error fetching total cart cost",
  TextRoutes.errorFetchingPendingCartsCount: "Error fetching pending carts count",
  TextRoutes.errorFetchingPendedCarts: "Error fetching pended carts",
  TextRoutes.errorFetchingCartsNumbers: "Error fetching carts numbers",
  TextRoutes.errorFetchingItemsNumbers: "Error fetching items numbers",
  TextRoutes.errorFetchingCartData: "Error fetching cart data",
  TextRoutes.errorGettingMaxInvoiceNumber: "Error getting max invoice number",
  TextRoutes.errorIncreasingData: "Error increasing data",
  TextRoutes.errorDecreasingData: "Error decreasing data",
  TextRoutes.errorApplyingItemDiscount: "Error applying item discount",
  TextRoutes.errorApplyingCartDiscount: "Error applying cart discount",
  TextRoutes.errorDuringCashBack: "Error during cashback",
  TextRoutes.errorUpdatingItemCount: "Error updating item count",
  TextRoutes.errorUpdatingItemNumber: "Error updating item number",
  TextRoutes.errorUpdatingCartItemGiftStatus: "Error updating cart item gift status",
  TextRoutes.errorRetrievingUserId: "Error retrieving user ID",
  TextRoutes.errorAddingOwnerToCart: "Error adding owner to cart",
  TextRoutes.errorUpdatingCartOwnerName: "Error updating cart owner name",
  TextRoutes.errorUpdatingCartCashState: "Error updating cart cash state",
  TextRoutes.errorUpdatingCartTaxValue: "Error updating cart tax value",
  TextRoutes.errorDeletingItemsFromCart: "Error deleting items from cart",
  TextRoutes.errorDeletingCart: "Error deleting cart",
  TextRoutes.errorProcessingCartPayment: "Error processing cart payment",
  TextRoutes.errorGettingMaxInvoiceId: "Error getting max invoice ID",
  TextRoutes.errorFetchingLastInvoices: "Error fetching last invoices",
  TextRoutes.errorUpdatingInvoice: "Error updating invoice",
  TextRoutes.errorRemovingUpdatedInvoice: "Error removing updated invoice",
  TextRoutes.alreadyUsedDeviceCheckbox: "Already used device checkbox",
  TextRoutes.pleaseEnsureDeviceConnected: "Please ensure device is connected",

};
